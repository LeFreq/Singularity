This is a project to create a new OS starting from basic principles of OS theory, new architecture knowledge (Zen Code), and to fix the bloatware that all modern OSs have become, no thanks to artificially cheap manufacturing prices and other voodoo.  This project is made also to fix the instabilities that have cropped up from poor or inadequate design choices from legacy systems, including Intel, X, Microsoft, 

This project may replace Singularity OS.

The other design goal is the formation of a Data Ecosystem.  Recognizing that data is growing faster than coding expertise, this project will experiment with ideals such as "language as an OS", trying new language ideas that facilitate such concepts.

Multiprocessing will be addressed

Core design goals and philosophies:
1. A two core relationship to the machine:  data administration and application user
2. One can create all the essential functionality with small memory needs by using better architecture.
3. All data relates to other data, so make application "mashups" that relate to that data in all the ways users want
4. The network is the computer; so integrate P2P architecture in the OS.

In short, this project continues the ideal of the perfect OS, but in this case focussing on a shared "data ecosystem" of objects.  Those objects will be both apps and data objects in a unified object model.  Files are objcts, apps are objects, data are objects.  Implementing the design goals of OOP:  modularity (re-use), encapsulation (data security), and including object-sharing across networks (P2P).

This OS will implement the material in "Gospel of Object-Oriented Programming" at wiki.hackerspaces.org.




